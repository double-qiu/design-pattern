/**
 * 抽象工厂模式
 * 
 * 场景问题：组装电脑，我们在组装电脑的时候，通常需要选择一系列的配件，
 * 比如：CPU、硬盘、内存、主板、电源、机箱等等。为了使讨论简单点，只考虑选择CPU和主板的问题。
 * 事实上，我们在选择CPU的时候，面临一系列的问题，比如：品牌、型号、针脚数目、主频等问题，
 * 只有把这些都确定下来，才能确定具体的CPU。同样，在选择主板的时候，也有一系列的问题，
 * 比如：品牌、芯片组、集成芯片、总线频率等问题，也只有这些都确定了，才能确定具体的主板。
 * 选择不同的CPU和主板，是每个客户去组装电脑的时候，向装机公司提出的要求，也就是我们每个人自己拟定的装机方案。
 * 在最终确定这个装机方案之前，还需要整体考虑各个配件之间的兼容性，比如：CPU和主板，如果CPU针脚数和主板提供的CPU插口不兼容，
 * 是无法组装的。也就是说，装机方案是有整体性的，里面选择的各个配件之间是有关联的。
 * 对于装机工程师而言，他只知道组装一台电脑，需要相应的配件，但是具体使用什么样的配件，还得由客户说了算。
 * 也就是说装机工程师只是负责组装，而客户负责选择装配所需要的具体的配件。因此，当装机工程师为不同的客户组装电脑时，
 * 只需要按照客户的装机方案，去获取相应的配件，然后组装即可。
 */
package com.aido.design.abstractFactory;

/**
 * Hello world!
 *
 */
public class App 
{
    public static void main( String[] args )
    {
        System.out.println( "Hello World!" );
    }
}
